[main]

## Authentication Filters (Administration, Support and Customer)

autha = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
auths = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter

## Authorization Filters

hasRoles = org.ffsc.ssp.web.security.AuthorizationManagerFilter

## Authentication filters for AJAX requests

authx = org.ffsc.ssp.web.security.FacesAjaxAwareUserFilter

## Default login pages

autha.loginUrl = /pages/administration/index.jsf
authc.loginUrl = /pages/customer/index.jsf
auths.loginUrl = /pages/support/index.jsf

## JDBC Datasource configuration (MySQL)

dataSource = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
dataSource.serverName = localhost
dataSource.databaseName = SSP_DB
dataSource.user = root
dataSource.password = 12345
 
## JDBC REALM SQL Queries

jdbcRealm.authenticationQuery = SELECT PASSWORD FROM CREDENTIAL WHERE USERNAME = ?
jdbcRealm.userRolesQuery      = SELECT ACCESS_TYPE FROM CREDENTIAL WHERE USERNAME = ?

## JDBC REALM - Password Cryptography

credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.storedCredentialsHexEncoded=false
credentialsMatcher.hashAlgorithmName = SHA-256

## JDBC REALM

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $dataSource
jdbcRealm.credentialsMatcher = $credentialsMatcher

## Fixed users configuration (Enable just for test purposes)
#[users]
#admin = password

[urls]
/pages/administration/index.jsf = anon
/pages/administration/**  = autha, hasRoles["ADMINISTRATION"]

/pages/support/index.jsf = anon
/pages/support/**  = auths, hasRoles["ADMINISTRATION, SUPPORT"]

/pages/customer/index.jsf = anon
/pages/customer/** = authc
